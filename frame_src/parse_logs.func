#!/bin/bash

#splite file
# $1 -- start strings
# $2 -- end strings
# $3 -- input file
# $4 -- output dir
splite_file()
{
    #remove the head and tail
    local tmpnr=$(grep -n "$1" "$3" | head -n 1 | awk -F : '{print $1}')
    [ $tmpnr -gt 1 ] && sed -i "1,$((tmpnr-1)) d" "$3"
    tmpnr=$(grep -n "$2" "$3" | tail -n 1 | awk -F : '{print $1}')
    sed -i "$((tmpnr+1)),$ d" "$3"

    local nr_start=$(grep "$1" "$3" | wc -l)
    local nr_end=$(grep "$2" "$3" | wc -l)
    [ $nr_start -ne $nr_end ] && { msg_err "file not ok or strings not correct"; return 1; }

    grep -nr "$1" "$3" | awk -F : '{print $1}' > "$4/lineno.start"
    grep -nr "$2" "$3" | awk -F : '{print $1}' > "$4/lineno.end"

    local ns=1
    local ne=1
    for i in $(seq $nr_start)
    do
        ns=$(sed -n "$i p" "$4/lineno.start")
        ne=$(sed -n "$i p" "$4/lineno.end")
        [ $ns -ge $ne ] && { msg_err "splite_file $3 ns=$ns ne=$ne"; return 1; }
        sed -n "$ns,$ne p" "$3" > "$4/$i"
    done
    rm -rf "$4/lineno.start" "$4/lineno.end"
    return 0
}

# $1 -- log file
# $2 -- result file
parse_unixbench()
{
    local tmpdir=$(mktemp -d)
    local nr_rcd=0
    local localfile=$tmpdir/$(basename $1)
    cp -avf $1 $localfile

    splite_file "START_EOS_PERF_TEST" "END_EOS_PERF_TEST" "$localfile" "$tmpdir" || return 1
    local nr_rcd=$(grep "START_EOS_PERF_TEST" $localfile | wc -l)
    for i in $(seq $nr_rcd)
    do
        echo -n "$i " | tee -a "$2"
        grep -w "samples" "$tmpdir/$i" | awk '{print $(NF-5)}' | tr '\n' ' ' | tee -a "$2"
        grep -w "unixbench" "$tmpdir/$i" | awk '{print $(NF-1)}' | tr '\n' ' ' | tee -a "$2"
        grep -w "COST" "$tmpdir/$i" | awk '{print $(NF-1) " " $(NF-3)}' | tee -a "$2"
    done
    rm -rf $tmpdir
}

parse_y_cruncher()
{
    local tmpdir=$(mktemp -d)
    local nr_rcd=0
    local localfile=$tmpdir/$(basename $1)
    cp -avf $1 $localfile

    sed -i "s|\x1B\[[0-9;]*[mK]||g" $localfile || return 1
    dos2unix $localfile || return 1

    splite_file "START_EOS_PERF_TEST" "END_EOS_PERF_TEST" "$localfile" "$tmpdir" || return 1
    local nr_rcd=$(grep "START_EOS_PERF_TEST" $localfile | wc -l)
    for i in $(seq $nr_rcd)
    do
        echo -n "$i " | tee -a "$2"
        grep -w "Total Computation Time" "$tmpdir/$i" | awk '{print $4}' | tr '\n' ' ' | tee -a "$2"
        grep -w "Start-to-End Wall Time" "$tmpdir/$i" | awk '{print $4}' | tr '\n' ' ' | tee -a "$2"
        grep -w "CPU Utilization:" "$tmpdir/$i" | awk '{print $3 " " $6}' | tr '\n' ' ' | tee -a "$2"
        grep -w "Multi-core Efficiency:" "$tmpdir/$i" | awk '{print $3 " " $6}' | tr '\n' ' ' | tee -a "$2"
        grep -w "COST" "$tmpdir/$i" | awk '{print $(NF-1) " " $(NF-3)}' | tee -a "$2"
    done
    rm -rf $tmpdir
}

parse_sysbench()
{
    local tmpdir=$(mktemp -d)
    local nr_rcd=0
    local localfile=$tmpdir/$(basename $1)
    cp -avf $1 $localfile

    splite_file "START_EOS_PERF_TEST" "END_EOS_PERF_TEST" "$localfile" "$tmpdir" || return 1
    local nr_rcd=$(grep "START_EOS_PERF_TEST" $localfile | wc -l)
    for i in $(seq $nr_rcd)
    do
        echo -n "$i " | tee -a "$2"
        grep -w "FILEIO" "$tmpdir/$i" | awk '{print $(NF-3) " " $(NF)}' | tr '\n' ' ' | tee -a "$2"
        grep -w "CPU" "$tmpdir/$i" | awk '{print $(NF)}' | tr '\n' ' ' | tee -a "$2"
        grep -w "MEMORY" "$tmpdir/$i" | sed "s|.*(\([0-9.]\+\)[[:blank:]]\+MiB/sec.*)|\1|g" | tr '\n' ' ' | tee -a "$2"
        grep -w "THREADS" "$tmpdir/$i" | awk '{print $(NF)}' | tr '\n' ' ' | tee -a "$2"
        grep -w "COST" "$tmpdir/$i" | awk '{print $(NF-1) " " $(NF-3)}' | tee -a "$2"
    done
    rm -rf $tmpdir
}
